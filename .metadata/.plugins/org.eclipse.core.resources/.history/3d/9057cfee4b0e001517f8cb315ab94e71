<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.taommall.note.dao">
	<sql id="note-select">
		select note_no,title,content,send_id,receive_id,send_date,read,store
		from note
	</sql>
	
	
	<insert id="insertNote" parameterType="Note">
		<selectKey resultType="int" keyProperty="productId" order="BEFORE">
			select c_note_no.nextval from dual
		</selectKey>
		insert into note 
		(note_no,title,content,send_id,receive_id,send_date,read,store)
		values
		(#{noteNo}, #{title}, #{content}, #{sendId}, #{receiveId}, to_char(sysdate, 'yyyy-mm-dd-hh24-mi'),#{read} ,#{store})
	</insert>
	
	<delete id="deleteNote" parameterType="int">
		delete from note where note_no=#{noteNo}
	</delete>
	
	<update id="updateNoteStore" parameterType="int">
		update note set store='true'
		where note_no=#{noteNo}
	</update>
	
	<update id="updateNoteUnStore" parameterType="int">
		update note set store='false'
		where note_no=#{noteNo}
	</update>
	
	<update id="updateNoteRead" parameterType="int">
		update note set read='true'
		where note_no=#{noteNo}
	</update>
	
	<resultMap type="note" id="note-resultMap">
		<id column="note_no" property="noteNo"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="send_id" property="sendId"/>
		<result column="receive_id" property="receiveId"/>
		<result column="send_date" property="sendDate"/>
		<result column="read" property="read"/>
		<result column="store" property="store"/>
	</resultMap>

	
	<!-- 받은 쪽지함 - receiveId 기준.  -->
	<select id="selectNoteOfReceive" parameterType="org.springframework.ui.Model" resultMap="note-resultMap">
		select note_no,title,content,send_id,receive_id,send_date,read,store
		from(
			select ceil(rownum/#{contentsPerPage) page, note_no,title,content,send_id,receive_id,send_date,read,store
			from(
				<include refid="note-select"/>
				where receive_id=#{receiveId}
				order by send_date desc
			)
		)			
		where page = #{pageNo}
	</select>
	
	
	<!-- 보낸쪽지함 sendId 기준-->
	<select id="selectNoteOfSend" parameterType="org.springframework.ui.Model" resultMap="note-resultMap">
		select note_no,title,content,send_id,receive_id,send_date,read,store
		from(
			select ceil(rownum/#{contentsPerPage) page, note_no,title,content,send_id,receive_id,send_date,read,store
			from(
				<include refid="note-select"/>
				where send_id=#{sendId}
				order by send_date desc
			)
		)			
		where page = #{pageNo}
		
	</select>	
	
	
	<!-- 보관 쪽지함 receiveId and store 기준 -->
	<select id="selectNoteOfStore" parameterType="org.springframework.ui.Model" resultMap="product-resultMap">
		select note_no,title,content,sendId,receiveId,sendDate,read,store
		from(
			select ceil(rownum/#{contentsPerPage) page, note_no,title,content,sendId,receiveId,sendDate,read,store
			from(
				<include refid="note-select"/>
				where receive_id=#{receiveId} and store='true'
				order by send_date desc
			)
		)			
		where page = #{pageNo}
	</select>
	
	
	<select id="selectNoteCountReceive" resultType="_int" parameterType="org.springframework.ui.Model">
		select count(*)from product where receive_id=#{receiveId}
	</select>
	
	<select id="selectNoteCountSend" resultType="_int" parameterType="org.springframework.ui.Model">
		select count(*)from product where send_id=#{sendId}
	</select>
	
	<select id="selectNoteCountStore" resultType="_int" parameterType="org.springframework.ui.Model">
		select count(*)from product where receive_id=#{receiveId} and store='true'
	</select>
	
</mapper>
